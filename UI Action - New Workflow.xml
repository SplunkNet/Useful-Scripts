<?xml version="1.0" encoding="UTF-8"?>
<unload unload_date="2019-04-19 19:43:34">
<sys_ui_action action="INSERT_OR_UPDATE">
<action_name/>
<active>true</active>
<client>false</client>
<client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
<comments>Deletes the current workflow context and starts a brand new context.  This is helpful when testing workflows without having to create a new RITM record to test the changes.</comments>
<condition>gs.hasRole('admin')  &amp;&amp;  !current.cat_item.workflow.nil() &amp;&amp; !current.context.nil()</condition>
<form_action>true</form_action>
<form_button>true</form_button>
<form_button_v2>false</form_button_v2>
<form_context_menu>false</form_context_menu>
<form_link>false</form_link>
<form_menu_button_v2>false</form_menu_button_v2>
<form_style/>
<hint/>
<isolate_script>false</isolate_script>
<list_action>false</list_action>
<list_banner_button>false</list_banner_button>
<list_button>false</list_button>
<list_choice>false</list_choice>
<list_context_menu>false</list_context_menu>
<list_link>false</list_link>
<list_save_with_form_button>false</list_save_with_form_button>
<list_style/>
<name>New Workflow</name>
<onclick/>
<order>100</order>
<script><![CDATA[// delete the workflow attached to the record
//var wkfw = new Workflow();
//wkfw.deleteWorkflow(current);

//delete any related approval records (user and group) AND delete the workflow context.  This will write a comment to work notes.
var comment = '';
new WorkflowApprovalUtils().reset(current, comment);

//delete any related catalog tasks
var grTasks = new GlideRecord('sc_task');
grTasks.addQuery('requested_item',current.sys_id);
grTasks.query();
grTasks.deleteMultiple();

// start a new workflow
startWorkflow(current.cat_item.workflow.toString());

// stay on the RITM
action.setRedirectURL (current);

/**
 * Starts a new context of the workflow associated to the RITM
 */
function startWorkflow(id) {
	var w = new Workflow();
	var operation = 'insert';
	
	gs.info('ToddTest: id=' + id + '; current=' + current.sys_id + '; operation=' + operation);
	
	var context = w.startFlow(id, current, operation, getVars());
	if (context != null) {
		current.context = context.sys_id;
		current.update();
	}
	gs.info('ToddTest: current.context=' + current.context.toString());
}


/**
 * Get the variables from the request item so that we can map these to the workflow.input 
 * variables if the names match.
 */
function getVars() {
   var vars = {};
   for (var n in current.variables) 
      vars[n] = current.variables[n];
   
   return vars;
}]]></script>
<show_insert>false</show_insert>
<show_multiple_update>false</show_multiple_update>
<show_query>false</show_query>
<show_update>true</show_update>
<sys_class_name>sys_ui_action</sys_class_name>
<sys_created_by>tgoodhew</sys_created_by>
<sys_created_on>2019-04-19 14:52:21</sys_created_on>
<sys_domain>global</sys_domain>
<sys_domain_path>/</sys_domain_path>
<sys_id>6c2d87d70ff0b7002fed8e8ce1050e5b</sys_id>
<sys_mod_count>20</sys_mod_count>
<sys_name>New Workflow</sys_name>
<sys_overrides display_value=""/>
<sys_package display_value="Global" source="global">global</sys_package>
<sys_policy/>
<sys_scope display_value="Global">global</sys_scope>
<sys_update_name>sys_ui_action_6c2d87d70ff0b7002fed8e8ce1050e5b</sys_update_name>
<sys_updated_by>tgoodhew</sys_updated_by>
<sys_updated_on>2019-04-19 19:42:20</sys_updated_on>
<table>sc_req_item</table>
<ui11_compatible>true</ui11_compatible>
<ui16_compatible>false</ui16_compatible>
</sys_ui_action>
</unload>
